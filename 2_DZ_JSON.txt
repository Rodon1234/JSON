4) Создать внешний репозиторий c названием JSON. 

5) Клонировать репозиторий JSON на локальный компьютер.            // git clone https://github.com/Rodon1234/JSON.git

6) Внутри локального JSON создать файл “new.json”.                 // touch new.json

7) Добавить файл под гит.                                          // git add new.json   или // git add .          

8) Закоммитить файл                                                // git commit -m "add 1 json"

9) Отправить файл на внешний GitHub репозиторий                    // git push 

10) Отредактировать содержание файла “new.json” - написать          // vim new.json
информацию о себе (ФИО, возраст, количество домашних               //  {
животных, будущая желаемая зарплата). Всё написать в 
формате JSON.
                                                                      "name":"Pavel",
                                                                      "age":"28"
                                                                      "pets":"0"
                                                                      "future_salary":"10000$"
                                                                       }

11) Создать файл preferences.json                                   // touch preferences.json

9) В файл preferences.json добавить информацию о своих             //  {
предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
любимое время года, сторона которую хотели бы посетить) 
в формате JSON.
                                                                      "favorite_film": "Lord of the Rings",
                                                                      "favorite_series": "Witcher",
                                                                      "favorite_food": "beaf",
                                                                      "favorite_seaon": "summer",
                                                                      "future_country": "USA"

                                                                        }

12)Создать файл sklls.json добавить информацию о скиллах 
которые будут изучены на курсе в формате JSON.                       {



                                                                   "skills":[ "SDLC","STLC","HTTP","Json","XML","Test",
                                                                            "API","Across Posman","JS","VPN","xCode",
                                                                            "Android Studio","Dev Tools","http web",
                                                                            "bash script","terminal","Linux","Jmeter",
                                                                            "Python","Scrum","SQ" ]

                                                                     }


13)Отправить сразу 2 файла на внешний репозиторий.                 $ touch test1.json test2.json test1.txt
                                                                   $ git add .
                                                                   $ git commit -m "add 3 files"
                                                                   $ git push


14) Создать файл sklls.json добавить информацию о скиллах 
которые будут изучены на курсе в формате JSON                

15)   Отправить сразу 2 файла на внешний репозиторий.              add file->Upload file->Choose your files-> зажим Ctrl, выбор нужных файлов->Открыть

16) На веб интерфейсе создать файл bug_report.json                 add file->Create new file-> "название"->Commit new file.

                                                                

17) Сделать Commit changes (сохранить) изменения на веб            Нижний левый угол диалог окна "Commit changes"
интерфейсе.

18) На веб интерфейсе модифицировать файл bug_report.json,        Owerview->XML->bug_report.xml-> Открывается диалог окно для редактирования.
добавить баг репорт в формате JSON.
                                                                  {

                                                                "№": 1,
                                                                "Incident_Type:" "Bug",
                                                                "Summary": "PHP error appears in window after input SQL request in lield of login",
                                                                "Description": "If enter SQL request in lield of login and press [Поехали] button PHP error appears in",
                                                                "Step_to_reproduce": [ 1 " Open page via URL http://megatask/",
                                                                2 " Enter DB request (SELECT * FROM users WHERE u_ul LIKE 'a%') in field 'Логин' ",
                                                                3 "Enter correct password (b) in field 'Пароль',"
                                                                4 "Press 'Поехали' button" ]
                                                                "Severty": "minor"
                                                                "Priority": "Medium"
 
                                                                    }
                                                                // commit change [Enter]
       
19) Сделать Commit changes (сохранить) изменения на веб интерфейсе.

20) Синхронизировать внешний и локальный репозиторий JSON          // git pull                     
